{"version":3,"sources":["utils.js","wish.js","page/GameLoading.js","logic/PushDaemon.js","logic/GameInfo.js","page/License.js","widget/UserGroupTag.js","widget/ChallengeIcon.js","widget/UserBadges.js","page/Board.js","page/UserSubmissions.js","page/Writeup.js","widget/Template.js","page/Announcements.js","widget/TokenWidget.js","widget/TouchedUsers.js","page/Game.js","page/Triggers.js","page/UserProfile.js","page/Terms.js","page/LoginOther.js","widget/Header.js","widget/Footer.js","App.js","index.js","branding.js"],"names":["Cap","text","width","className","style","maxWidth","random_str","len","alphabet","out","i","charAt","Math","floor","random","length","to_auth","endpoint","message","loading","content","key","duration","setTimeout","window","location","href","AUTH_ROOT","pad2","x","format_ts","ts","time","Date","getMonth","getDate","getHours","getMinutes","getSeconds","timeago_format","buildFormatter","prefixAgo","prefixFromNow","suffixAgo","val","delta","suffixFromNow","seconds","minute","minutes","hour","hours","day","days","month","months","year","years","wordSeparator","TimestampAgo","date","formatter","title","NotFound","loc","useLocation","nav","useNavigate","icon","status","subTitle","pathname","extra","onClick","ExtLink","children","target","rel","useReloadButton","interval_s","last_reloaded_ms","useRef","reload_btn","useEffect","current","disabled","WISH_VER","TABID","wish","data","Promise","resolve","fetch","WISH_ROOT","includes","method","credentials","headers","body","JSON","stringify","then","res","json","catch","e","useWishData","args","useState","error","set_error","set_data","load_data","useCallback","_TABID","GameLoading","set_info","retry_btn","type","WifiOutlined","error_msg","RobotOutlined","navigator","serviceWorker","getRegistrations","registrations","registration","console","log","unregister","reload","LoadingOutlined","Reloader","showIcon","action","PushClient","reload_info","this","ws","stopped","count_reconnect","connect","notif_conf","notification","info","NotificationOutlined","description","CarryOutOutlined","new_tick_name","replace","success","RocketOutlined","nickname","board_name","challenge","flag","url","URL","WS_ROOT","protocol","WebSocket","stable_waiter","onopen","onclose","code","reason","clearTimeout","onmessage","handle_message","parse","close","config","placement","maxCount","top","closeIcon","CloseCircleOutlined","PushDaemon","init","feature","push","client","stop","GameInfoCtx","createContext","user","id","group_disp","token","profile","gender","tel","email","qq","comment","terms_agreed","game","templates","GameInfoProvider","value","set_value","Provider","useGameInfo","useContext","License","CONTEST_LICENSE","UserGroupTag","color","ChallengeIcon","BorderOutlined","MinusSquareTwoTone","twoToneColor","CheckSquareTwoTone","FlagIcon","FlagTwoTone","UserBadges","badges","icons","badge","HeartTwoTone","StarTwoTone","startsWith","substring","InfoCircleTwoTone","TopStarPlot","lazy","ChallengeStatus","ch","record","category","flags","map","name","idx","flg","flag_status","gained_score","timestamp_s","TopStarPlotLoading","UserName","indexOf","basename","tag","ScoreBoardContent","ErrorBoundary","fallback","size","dataSource","list","pagination","rowKey","scroll","Column","dataIndex","render","_text","challenges","trigger","destroyTooltipOnHide","align","offset","mouseEnterDelay","mouseLeaveDelay","overlayClassName","autoAdjustOverflow","challenge_status","FirstBloodBoardContent","disp_data","flatMap","f","challenge_title","challenge_metadata","metadata","flags_count","flag_idx0","onCell","rowSpan","first_blood_award_eligible","FireOutlined","BoardContent","Board","last_reloaded","mark_reload","HistoryOutlined","ref","SyncOutlined","desc","SubmissionsTable","overrides","override","UserSubmissions","WriteupForm","uploading","set_uploading","file","set_file","publish","set_publish","rights","set_rights","writeup_required","submitted_metadata","Object","keys","k","WRITEUP_INSTRUCTION","bordered","onFinish","form","FormData","append","xhr","XMLHttpRequest","open","setRequestHeader","withCredentials","responseType","upload","addEventListener","event","lengthComputable","percentage","loaded","total","toFixed","readyState","response","send","colon","labelCol","span","labelWrap","wrapperCol","Item","label","Dragger","fileList","beforeUpload","max_size_mb","FileDoneOutlined","FileAddOutlined","help","Group","buttonStyle","onChange","Button","block","htmlType","UploadOutlined","Writeup","TemplateStr","dangerouslySetInnerHTML","__html","TemplateFile","html","set_html","load_template","TEMPLATE_ROOT","Announcement","announcement","fontSize","fontWeight","Announcements","ann","image","Empty","PRESENTED_IMAGE_SIMPLE","TokenWidget","copy","CopyOutlined","TouchedUsersModal","filters","onFilter","filterMultiple","TouchedUsersLink","modal_open","set_modal_open","visible","footer","destroyOnClose","onCancel","ChallengeAction","host","danger","marginLeft","CodepenOutlined","WEB_TERMINAL_ADDR","port","ATTACHMENT_ROOT","filename","FlagInput","do_reload_list","set_loading","Search","addonBefore","QuestionCircleOutlined","placeholder","enterButton","FlagOutlined","onSearch","challenge_key","ChallengeBody","actions","RightCircleOutlined","ScoreDeduction","base","cur","ratio","Challenge","tot_base_score","passed_users_count","touched_users_count","author","PortalUserInfo","active_board_key","status_line","tot_score_by_cat","PieChartFilled","cat","PortalChallengeList","active_key","category_color","CaretDownOutlined","tot_cur_score","cur_score","base_score","Portal","params","useParams","active_challenge_key","undefined","active_challenge","useMemo","challenge_list","_anticheat_report","show_writeup","SolutionOutlined","FileTextOutlined","user_info","current_name","next_name","next_timestamp_s","last_announcement","Game","HomeOutlined","GlobalOutlined","WithStatus","Splitter","splitted","split","frag","Triggers","mode","dot","ClockCircleOutlined","UserProfileForm","changed","set_changed","submit_btn","form_style","initialValues","onValuesChange","card_style","input_style","onPressEnter","click","onFormFinish","forms","all_values","values","forEach","assign","getFieldsValue","maxLength","showCount","group","CheckCircleOutlined","UserProfile","Terms","LoginOther","GithubOutlined","WindowsOutlined","Header","game_info","cur_key","src","alt","backgroundColor","GAME_LOGO","GAME_TITLE","theme","selectedKeys","onSelect","UnorderedListOutlined","CrownOutlined","SubMenu","popupOffset","UserOutlined","popupClassName","EditOutlined","FileProtectOutlined","DisconnectOutlined","LoginOutlined","Footer","InfoRouter","page","BoardRouter","FundOutlined","AimOutlined","PageStateReporter","on_focus","SYBIL_ROOT","on_blur","removeEventListener","App","exact","path","element","to","component","autoInsertSpaceInButton","locale","zhCN","ReactDOM","document","getElementById","SVC_ROOT"],"mappings":"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","file":"static/js/main.77a40a83.chunk.js","sourcesContent":["import {useRef, useEffect} from 'react';\nimport {useLocation, useNavigate} from 'react-router-dom';\nimport {Result, Button, message} from 'antd';\nimport TimeAgo from 'react-timeago';\nimport buildFormatter from 'react-timeago/lib/formatters/buildFormatter';\nimport {InboxOutlined} from '@ant-design/icons';\n\nimport {AUTH_ROOT} from './branding';\n\nexport function Cap({text, width}) {\n    return (\n        <span className=\"capped-text\" style={{\n            maxWidth: width+'px',\n        }}>{text}</span>\n    );\n}\n\nexport function random_str(len) {\n    let alphabet = 'qwertyuiopasdfghjkzxcvbnmQWERTYUPASDFGHJKLZXCVBNM23456789';\n    let out = '';\n    for(let i=0; i<len; i++)\n        out += alphabet.charAt(Math.floor(Math.random()*alphabet.length));\n    return out;\n}\n\nexport function to_auth(endpoint) {\n    message.loading({content: '正在前往登录页面…', key: 'Utils.ToAuth', duration: 15});\n    setTimeout(()=>{\n        window.location.href = AUTH_ROOT+endpoint;\n    }, 100);\n}\n\nfunction pad2(x) {\n    return x<10 ? '0'+x : ''+x;\n}\nexport function format_ts(ts) {\n    let time = new Date(ts*1000);\n    return (\n        //`${time.getFullYear()}-${pad2(time.getMonth()+1)}-${pad2(time.getDate())}`\n        `${pad2(time.getMonth()+1)}-${pad2(time.getDate())}`\n        +` ${pad2(time.getHours())}:${pad2(time.getMinutes())}:${pad2(time.getSeconds())}`\n    );\n}\n\nconst timeago_format=buildFormatter({\n    prefixAgo: null,\n    prefixFromNow: '',\n    suffixAgo: (val, delta)=>{\n        return delta<59500 ? '刚刚' : '前';\n    },\n    suffixFromNow: (val, delta)=>{\n        return (-delta)<59500 ? '1分钟之内' : '后';\n    },\n    seconds: '\\u200b', // ZWSP, not '' because TimeAgo will fall back to default\n    minute: '1分钟',\n    minutes: '%d分钟',\n    hour: '1小时',\n    hours: '%d小时',\n    day: '1天',\n    days: '%d天',\n    month: '1个月',\n    months: '%d月',\n    year: '1年',\n    years: '%d年',\n    wordSeparator: '',\n});\nexport function TimestampAgo({ts, delta=0}) {\n    return (\n        <TimeAgo date={(ts+delta)*1000} formatter={timeago_format} title={format_ts(ts)} />\n    );\n}\n\nexport function NotFound() {\n    let loc = useLocation();\n    let nav = useNavigate();\n\n    return (\n        <Result\n            icon={<InboxOutlined />}\n            status=\"error\"\n            title=\"页面不存在\"\n            subTitle={<Cap text={loc.pathname} width={300} />}\n            extra={[\n                <Button key=\"home\" onClick={()=>nav('/')}>返回主页</Button>\n            ]}\n        />\n    );\n}\n\nexport function ExtLink({href, children}) {\n    return (\n        <a href={href}  target=\"_blank\" rel=\"noreferrer\">{children}</a>\n    );\n}\n\nexport function useReloadButton(interval_s) {\n    // xxx: will not trigger re-render if only last_reloaded_ms is changed, because it is a ref\n    // this is generally safe because usually other states are changed after reloading\n\n    let last_reloaded_ms = useRef(0);\n    let reload_btn = useRef(null);\n\n    useEffect(()=>{\n        last_reloaded_ms.current = +new Date();\n    }, []);\n\n    function mark_reload() {\n        if(reload_btn.current)\n            reload_btn.current.disabled = true;\n\n        last_reloaded_ms.current = +new Date();\n\n        setTimeout(()=>{\n            if((+new Date())-last_reloaded_ms.current >= interval_s*1000-200)\n                if(reload_btn.current)\n                    reload_btn.current.disabled = false;\n        }, interval_s*1000);\n    }\n\n    return [last_reloaded_ms.current/1000, mark_reload, reload_btn];\n}","import {useState, useCallback, useEffect} from 'react';\n\nimport {WISH_ROOT} from './branding';\nimport {random_str} from './utils';\n\nexport const WISH_VER = 'wish.2022.v1';\n\nexport const TABID = random_str(4);\nwindow._TABID = TABID;\n\nexport function wish(endpoint, data) {\n    return new Promise((resolve)=>{\n        fetch(WISH_ROOT + endpoint + (endpoint.includes('?') ? '&' : '?') + 'tabid=' + TABID, {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n                'X-Wish-Version': WISH_VER,\n                'Content-Type': 'application/json',\n            },\n            body: data ? JSON.stringify(data) : '{}',\n        })\n            .then((res)=>{\n                if(res.status!==200)\n                    return {\n                        'error': 'HTTP_ERROR',\n                        'error_msg': `HTTP 错误 ${res.status}`,\n                    };\n                else\n                    return res.json();\n            })\n            .then((json)=>{\n                resolve(json);\n            })\n            .catch((e)=>{\n                resolve({\n                    'error': 'HTTP_REQ_FAILED',\n                    'error_msg': `网络错误 ${e}`,\n                });\n            });\n    });\n}\n\nexport function useWishData(endpoint, args) {\n    let [error, set_error] = useState(null);\n    let [data, set_data] = useState(null);\n\n    let load_data = useCallback(()=>{\n        set_data(null);\n        set_error(null);\n\n        wish(endpoint, args)\n            .then((res)=>{\n                if(res.error)\n                    set_error(res);\n                else {\n                    set_error(null);\n                    set_data(res);\n                }\n            });\n    }, [endpoint, args]);\n\n    useEffect(()=>{\n        load_data();\n    }, [load_data]);\n\n    return [error, data, load_data];\n}\n","import {useEffect} from 'react';\nimport {Result, Button, Alert} from 'antd';\nimport {LoadingOutlined, WifiOutlined, RobotOutlined} from '@ant-design/icons';\n\nimport {useWishData} from '../wish';\n\nexport function GameLoading({set_info}) {\n    let [error, data, load_data] = useWishData('game_info');\n\n    useEffect(()=>{\n        set_info(data);\n    }, [set_info, data]);\n\n    function force_reload() {\n        if('serviceWorker' in navigator) {\n            navigator.serviceWorker.getRegistrations()\n                .then((registrations)=>{\n                    for(let registration of registrations) {\n                        console.log('unregister', registration);\n                        // noinspection JSIgnoredPromiseFromCall\n                        registration.unregister();\n                    }\n                });\n        }\n        setTimeout(()=>{\n            // noinspection JSCheckFunctionSignatures\n            window.location.reload(true);\n        }, 150);\n    }\n\n    let retry_btn=(\n        <Button key=\"refresh\" type=\"primary\" onClick={load_data}>重试</Button>\n    );\n\n    return (\n        <div className=\"result-page-container\">\n            {error ? (\n                error.error==='HTTP_REQ_FAILED' ?\n                    <Result\n                        icon={<WifiOutlined />}\n                        status=\"error\"\n                        title=\"网络错误\"\n                        subTitle={error.error_msg}\n                        extra={[retry_btn]}\n                    /> :\n                error.error==='WISH_VERSION_MISMATCH' ?\n                    <Result\n                        icon={<RobotOutlined />}\n                        status=\"error\"\n                        title=\"API 版本更新\"\n                        subTitle={error.error_msg}\n                        extra={[\n                            <Button key=\"refresh\" type=\"primary\" onClick={force_reload}>刷新页面（可能需要清除浏览器缓存）</Button>,\n                        ]}\n                    /> :\n                    <Result\n                        status=\"error\"\n                        title=\"错误\"\n                        subTitle={error.error_msg}\n                        extra={[retry_btn]}\n                    />\n                ) :\n                <Result\n                    icon={<LoadingOutlined />}\n                    subTitle=\"获取比赛信息\"\n                />\n            }\n        </div>\n    );\n}\n\nexport function Reloader({message, reload}) {\n    return (\n        <Alert\n            type=\"error\" showIcon\n            message={message}\n            action={\n                <Button onClick={reload}>重试</Button>\n            }\n        />\n    );\n}","import {useEffect} from 'react';\nimport {message, notification} from 'antd';\nimport {NotificationOutlined, CarryOutOutlined, RocketOutlined, CloseCircleOutlined} from '@ant-design/icons';\n\nimport {WS_ROOT} from '../branding';\n\nimport './PushDaemon.less';\nimport {TABID} from '../wish';\n\nconst PUSH_STARTUP_DELAY_MS = 2000;\nconst PUSH_RECONNECT_DELAY_MS = 5000;\nconst PUSH_STABLE_MS = 25000;\nconst PUSH_RECONNECT_MAX = 8;\n\nclass PushClient {\n    constructor(reload_info) {\n        this.ws = null;\n        this.stopped = false;\n        this.count_reconnect = 0;\n        this.reload_info = reload_info;\n\n        setTimeout(()=>{\n            this.connect();\n        }, PUSH_STARTUP_DELAY_MS);\n    }\n\n    static init() {\n        notification.config({\n            duration: 7,\n            placement: 'topRight',\n            maxCount: 4,\n            top: 70,\n            closeIcon: (\n                <CloseCircleOutlined />\n            ),\n        });\n    }\n\n    handle_message(data) {\n        let key = `notification-${+new Date()}`;\n        let notif_conf = {\n            key: key,\n            className: 'push-notif',\n        };\n\n        if(data.type==='new_announcement') {\n            notification.info({\n                ...notif_conf,\n                icon: <NotificationOutlined />,\n                message: '比赛公告',\n                description: `有新的公告【${data.title}】`,\n            });\n        } else if(data.type==='tick_update') {\n            setTimeout(()=>{\n                notification.info({\n                    ...notif_conf,\n                    icon: <CarryOutOutlined />,\n                    message: '赛程提醒',\n                    description: data.new_tick_name.replace(/;/, '，'),\n                });\n                this.reload_info();\n            }, 200+Math.random()*1300); // add a random delay to flatten the backend load\n        } else if(data.type==='flag_first_blood') {\n            notification.success({\n                ...notif_conf,\n                icon: <RocketOutlined />,\n                message: 'Flag 一血提醒',\n                description: `恭喜【${data.nickname}】在【${data.board_name}】中拿到了题目【${data.challenge}】的【${data.flag}】的一血`,\n            });\n        } else if(data.type==='challenge_first_blood') {\n            notification.success({\n                ...notif_conf,\n                icon: <RocketOutlined />,\n                message: '题目一血提醒',\n                description: `恭喜【${data.nickname}】在【${data.board_name}】中拿到了题目【${data.challenge}】的一血`,\n            });\n        }\n    }\n\n    connect() {\n        if(this.stopped)\n            return;\n\n        let url = new URL(WS_ROOT+'push?tabid='+TABID, window.location.href);\n        url.protocol = url.protocol==='http:' ? 'ws:' : 'wss:';\n\n        this.ws = new WebSocket(url.href);\n        console.log(`PushClient: connecting to ${url.href}`);\n\n        let stable_waiter = null;\n        this.ws.onopen = (e)=>{\n            console.log('PushClient: socket opened');\n            stable_waiter = setTimeout(()=>{\n                this.count_reconnect = 0;\n            }, PUSH_STABLE_MS);\n        }\n\n        this.ws.onclose = (e)=>{\n            if(e.code===4337) {\n                console.log('PushClient: socket closed by server, will not retry', e.reason);\n                this.stopped = true;\n                return;\n            }\n            console.log('PushClient: socket closed, will reconnect later', e);\n            setTimeout(()=>{\n                if(this.count_reconnect<PUSH_RECONNECT_MAX) {\n                    this.count_reconnect++;\n                    this.connect();\n                } else {\n                    message.error({content: '消息推送连接中断', key: 'PushDaemon.Error', duration: 3});\n                    console.log('PushClient: stopped reconnecting');\n                }\n            }, PUSH_RECONNECT_DELAY_MS);\n\n            if(stable_waiter!=null)\n                clearTimeout(stable_waiter);\n        };\n\n        this.ws.onmessage = (e)=>{\n            this.handle_message(JSON.parse(e.data));\n        };\n    }\n\n    stop() {\n        this.stopped = true;\n        if(this.ws!==null)\n            this.ws.close();\n    }\n}\n\nexport function PushDaemon({info, reload_info}) {\n    useEffect(()=>{\n        PushClient.init();\n    }, []);\n\n    useEffect(()=>{\n        if(info!==null && info.feature.push) {\n            let client = new PushClient(reload_info);\n            return ()=>{\n                client.stop();\n            };\n        }\n    }, [info, reload_info]);\n\n    return null;\n}","import {createContext, useState, useContext} from 'react';\n\nimport {GameLoading} from '../page/GameLoading';\nimport {PushDaemon} from './PushDaemon';\n\nexport let GameInfoCtx = createContext({\n    info: {\n        user: {\n            id: null,\n            group_disp: '',\n            token: '',\n            profile: {\n                nickname: '',\n                gender: '',\n                tel: '',\n                email: '',\n                qq: '',\n                comment: '',\n            },\n            terms_agreed: false,\n        },\n        feature: {\n            game: false,\n            push: false,\n            templates: [],\n        },\n    },\n    reload_info: ()=>{},\n});\n\nexport function GameInfoProvider({children}) {\n    let [value, set_value] = useState(null);\n\n    function reload_info() {\n        set_value(null);\n    }\n\n    return (\n        <GameInfoCtx.Provider value={{\n            info: value,\n            reload_info: reload_info,\n        }}>\n            {value!==null && value.feature.push ? <PushDaemon info={value} reload_info={reload_info} /> : null}\n            {value===null ? <GameLoading set_info={set_value} /> : children}\n        </GameInfoCtx.Provider>\n    );\n}\n\nexport function useGameInfo() {\n    let {info} = useContext(GameInfoCtx);\n    return info;\n}","import {CONTEST_LICENSE} from '../branding';\nimport {ExtLink} from '../utils';\nimport {Card} from 'antd';\n\nexport function License() {\n    return (\n        <div className=\"slim-container\">\n            <h1>开源许可证</h1>\n            <Card>\n                <p><b>关于本平台的使用许可：</b></p>\n                <p>\n                    Guiding Star 是为了 PKU GeekGame 而开发的 CTF 比赛平台，<ExtLink href=\"https://github.com/PKU-GeekGame/guiding-star\">在 GitHub 开放源代码</ExtLink>。\n                </p>\n                <p>\n                    允许任何人在 MIT 协议（如下）的要求下部署或二次开发本平台。\n                </p>\n                <p>\n                    Copyright (c) 2022 @xmcp, and other members from PKUGGG Team\n                </p>\n                <p>\n                    Permission is hereby granted, free of charge, to any person obtaining a copy\n                    of this software and associated documentation files (the \"Software\"), to deal\n                    in the Software without restriction, including without limitation the rights\n                    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n                    copies of the Software, and to permit persons to whom the Software is\n                    furnished to do so, subject to the following conditions:\n                </p>\n                <p>\n                    The above copyright notice and this permission notice shall be included in all\n                    copies or substantial portions of the Software.\n                </p>\n                <p>\n                    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n                    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n                    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n                    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n                    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n                    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n                    SOFTWARE.\n                </p>\n                <p>\n                    平台前端部分使用了按照 MIT 协议开源的{' '}\n                    <ExtLink href=\"https://github.com/facebook/react/blob/main/LICENSE\">React</ExtLink>、\n                    <ExtLink href=\"https://github.com/remix-run/react-router/blob/main/LICENSE.md\">React-Router</ExtLink>、\n                    <ExtLink href=\"https://github.com/nmn/react-timeago/blob/master/LICENSE\">React-TimeAgo</ExtLink>、\n                    <ExtLink href=\"https://github.com/ant-design/ant-design/blob/master/LICENSE\">Ant-Design</ExtLink>、\n                    <ExtLink href=\"https://github.com/ant-design/ant-design-charts/blob/master/LICENSE\">Ant-Design-Charts</ExtLink> 和{' '}\n                    <ExtLink href=\"https://github.com/sudodoki/copy-to-clipboard/blob/master/LICENSE\">copy-to-clipboard</ExtLink>{' '}\n                    等第三方组件。\n                </p>\n                <p>\n                    平台后端部分使用的第三方组件列表参见后端代码。\n                </p>\n            </Card>\n            <br />\n            <Card>\n                <p><b>关于比赛内容的使用许可：</b></p>\n                {CONTEST_LICENSE}\n            </Card>\n        </div>\n    );\n}","import {Tag} from 'antd';\n\nexport function UserGroupTag({children}) {\n    return (\n        <Tag color=\"blue\">{children}</Tag>\n    );\n}","import {MinusSquareTwoTone, CheckSquareTwoTone, FlagTwoTone, BorderOutlined} from '@ant-design/icons';\n\nimport './ChallengeIcon.less';\n\nexport function ChallengeIcon({status}) {\n    if(status==='untouched')\n        return <BorderOutlined className=\"challenge-icon-untouched\" />;\n    else if(status==='partial')\n        return <MinusSquareTwoTone className=\"challenge-icon-partial\" twoToneColor=\"#1e63bd\" />;\n    else if(status==='passed')\n        return <CheckSquareTwoTone className=\"challenge-icon-passed\" twoToneColor=\"#1ab500\" />;\n    else\n        return '??';\n}\n\nexport function FlagIcon({status}) {\n    if(status==='untouched')\n        return <FlagTwoTone className=\"flag-icon-passed\" twoToneColor=\"#a7a7a7\" />;\n    else if(status==='passed')\n        return <FlagTwoTone className=\"flag-icon-passed\" twoToneColor=\"#1ab500\" />;\n    else\n        return '??';\n}","import {Tooltip} from 'antd';\nimport {HeartTwoTone, StarTwoTone, InfoCircleTwoTone} from '@ant-design/icons';\n\nexport function UserBadges({badges}) {\n    if(badges.length===0)\n        return null;\n\n    let icons = [];\n    for(let badge of badges) {\n        if(badge==='girl')\n            icons.push(<Tooltip key={badge} title=\"具有女生特别奖资格\"><HeartTwoTone\n                twoToneColor=\"#eb2f96\" /></Tooltip>);\n        else if(badge==='rookie')\n            icons.push(<Tooltip key={badge} title=\"具有新生特别奖资格\"><StarTwoTone /></Tooltip>);\n        else if(badge.startsWith('remark:'))\n            icons.push(<Tooltip key={badge} title={badge.substring(7)}><InfoCircleTwoTone\n                twoToneColor=\"#ff6600\" /></Tooltip>);\n        else\n            icons.push(<span key={badge}>[{badge}]</span>)\n    }\n\n    return (\n        <span className=\"user-badges\">\n            {icons}\n        </span>\n    );\n}","import {lazy, Suspense} from 'react';\nimport {Alert, Skeleton, Table, Tooltip, Button, message, Tag} from 'antd';\nimport {HistoryOutlined, SyncOutlined, LoadingOutlined, FireOutlined} from '@ant-design/icons';\n\nimport {Reloader} from './GameLoading';\nimport {UserGroupTag} from '../widget/UserGroupTag';\nimport {ChallengeIcon, FlagIcon} from '../widget/ChallengeIcon';\nimport {useWishData} from '../wish';\nimport {format_ts, TimestampAgo, useReloadButton} from '../utils';\n\nimport './Board.less';\nimport {UserBadges} from '../widget/UserBadges';\n\nconst TopStarPlot = lazy(()=>import('../widget/TopStarPlot'));\n\nfunction ChallengeStatus({ch, record}) {\n    return (\n        <div>\n            <p><b>{ch.title}</b> ({ch.category})</p>\n            {ch.flags.map((name, idx)=>{\n                let flg = record.flag_status[`${ch.key}_${idx}`] || null;\n                return (\n                    <p key={idx}>\n                        <FlagIcon status={flg===null ? 'untouched' : 'passed'} />{' '}\n                        {name}：\n                        {flg===null ? '尚未通过' : `(+${flg.gained_score}) ${format_ts(flg.timestamp_s)}`}\n                    </p>\n                );\n            })}\n        </div>\n    );\n}\n\nfunction TopStarPlotLoading() {\n    return (\n        <div className=\"topstar-plot-loading\">\n            <p><LoadingOutlined /> 加载图表组件</p>\n        </div>\n    )\n}\n\nfunction UserName({name}) {\n    let idx = name.indexOf(' #');\n    if(idx<=0)\n        return <span className=\"name-base-part\">{name}</span>;\n    else {\n        let basename = name.substring(0, idx);\n        let tag = name.substring(idx);\n        return (<>\n            <span className=\"name-base-part\">{basename}</span>\n            <span className=\"name-tag-part\">{tag}</span>\n        </>);\n    }\n}\n\nfunction ScoreBoardContent({data}) {\n    return (\n        <div>\n            <Alert.ErrorBoundary>\n                <Suspense fallback={<TopStarPlotLoading />}>\n                    <TopStarPlot data={data} />\n                </Suspense>\n            </Alert.ErrorBoundary>\n            <br />\n            <Table\n                size=\"small\"\n                dataSource={data.list}\n                pagination={false}\n                rowKey=\"rank\"\n                scroll={{\n                    x: 'max-content',\n                }}\n            >\n                <Table.Column title=\"#\" dataIndex=\"rank\" />\n                <Table.Column title=\"昵称\" key=\"name\" render={(_text, record)=>(<>\n                    <UserName name={record.nickname} />\n                    {record.group_disp===null ? null : <>&nbsp;&nbsp;<UserGroupTag>{record.group_disp}</UserGroupTag></>}\n                    <UserBadges badges={record.badges} />\n                </>)} />\n                <Table.Column title=\"总分\" dataIndex=\"score\" render={(text)=><b>{text}</b>} />\n                <Table.Column title=\"最后提交时间\" dataIndex=\"last_succ_submission_ts\" render={(text)=>(\n                    format_ts(text)\n                )} />\n                <Table.Column title=\"答题进度\" key=\"challenges\" render={(_text, record)=>(\n                    data.challenges.map((ch)=>(\n                        <Tooltip\n                            key={ch.key} trigger=\"hover\" destroyTooltipOnHide={true}\n                            title={<ChallengeStatus ch={ch} record={record} />}\n                            placement=\"topRight\" align={{offset: [10, 8]}}\n                            mouseEnterDelay={0} mouseLeaveDelay={0}\n                            overlayClassName=\"board-challenge-status-tooltip\" autoAdjustOverflow={false}\n                        >\n                            <div className=\"board-challenge-status-icon\">\n                                <ChallengeIcon status={record.challenge_status[ch.key]} />\n                            </div>\n                        </Tooltip>\n                    ))\n                )} />\n            </Table>\n        </div>\n    );\n}\n\nfunction FirstBloodBoardContent({data}) {\n    let disp_data = data.list.flatMap((ch)=>(\n        ch.flags.map((f, idx)=>({\n            ...f,\n\n            challenge_title: ch.title,\n            challenge_metadata: ch.metadata,\n            flags_count: ch.flags.length,\n            flag_idx0: idx,\n            key: `${ch.key}_${idx}`\n        }))\n    ));\n\n    return (\n        <Table\n            size=\"small\"\n            dataSource={disp_data}\n            pagination={false}\n            rowKey=\"key\"\n            scroll={{\n                x: 'max-content',\n            }}\n        >\n            <Table.Column title=\"题目\" dataIndex=\"challenge_title\" render={(text)=><b>{text}</b>} onCell={(record)=>({\n                rowSpan: record.flag_idx0===0 ? record.flags_count : 0,\n            })} />\n            <Table.Column title=\"Flag\" dataIndex=\"flag_name\" render={(text, record)=>(<>\n                {text===null ? (\n                    record.flags_count>1 ? '解出所有 Flag' : '解出 Flag'\n                ) : text}\n                {!!(text===null && record.challenge_metadata.first_blood_award_eligible) &&\n                    <Tooltip title=\"首个完全解出的校内选手可获得此题的解题先锋奖\">\n                        {' '}<Tag color=\"#a00\">\n                            <FireOutlined twoToneColor=\"red\" /> 解题先锋奖\n                        </Tag>\n                    </Tooltip>\n                }\n            </>)} />\n            <Table.Column title=\"一血获得者\" key=\"user\" render={(_text, record)=>(\n                record.nickname!==null &&\n                    <>\n                        <UserName name={record.nickname} />\n                        {record.group_disp===null ? null : <>&nbsp;&nbsp;<UserGroupTag>{record.group_disp}</UserGroupTag></>}\n                        <UserBadges badges={record.badges} />\n                    </>\n            )} />\n            <Table.Column title=\"提交时间\" dataIndex=\"timestamp\" render={(text)=>(\n                text===null ? null : format_ts(text)\n            )} />\n        </Table>\n    );\n}\n\nfunction BoardContent({data}) {\n    if(data.type==='score')\n        return <ScoreBoardContent data={data} />;\n    else if(data.type==='firstblood')\n        return <FirstBloodBoardContent data={data} />;\n    else\n        return <Alert type=\"error\" message={`未知排行榜类型 ${data.type}`} showIcon />;\n}\n\nexport function Board({name}) {\n    let [error, data, load_data] = useWishData('board/'+name);\n    let [last_reloaded, mark_reload, reload_btn] = useReloadButton(3);\n\n    if(error)\n        return (\n            <Reloader message={error.error_msg} reload={()=>{\n                mark_reload();\n                load_data();\n            }} />\n        );\n\n    return (\n        <div>\n            <div className=\"board-reloader\">\n                <div>\n                    <HistoryOutlined /> {last_reloaded!==0 && <>\n                        <TimestampAgo ts={last_reloaded} />更新（{format_ts(last_reloaded)}）\n                    </>}\n                </div>\n                <div>\n                    <Button type=\"link\" ref={reload_btn} onClick={()=>{\n                        message.success({content: '已刷新排行榜', key: 'Board.ManualLoadData', duration: 2});\n                        mark_reload();\n                        load_data();\n                    }}>\n                        <SyncOutlined /> 刷新排行榜\n                    </Button>\n                </div>\n            </div>\n            {data===null ?\n                <Skeleton /> :\n                <div>\n                    {!!data.desc && <>\n                        <Alert type=\"info\" message={data.desc} showIcon />\n                        <br />\n                    </>}\n                    <BoardContent data={data} />\n                </div>\n            }\n        </div>\n    );\n}","import {Skeleton, Table, Tag} from 'antd';\n\nimport {Reloader} from './GameLoading';\nimport {FlagIcon} from '../widget/ChallengeIcon';\nimport {useWishData} from '../wish';\nimport {format_ts} from '../utils';\n\nfunction SubmissionsTable() {\n    let [error, data, load_data] = useWishData('submissions');\n\n    if(error)\n        return <Reloader message={error.error_msg} reload={load_data} />;\n    if(data===null)\n        return <Skeleton />;\n\n    return (\n        <Table\n            size=\"small\"\n            dataSource={data.list}\n            rowKey=\"idx\"\n            scroll={{\n                x: 'max-content',\n            }}\n        >\n            <Table.Column title=\"提交时间\" dataIndex=\"timestamp_s\" render={(text)=>format_ts(text)} />\n            <Table.Column title=\"题目\" dataIndex=\"challenge_title\" />\n            <Table.Column title=\"Flag\" dataIndex=\"matched_flag\" render={(text)=>\n                text===null ?\n                    <><FlagIcon status=\"untouched\" /> 未匹配</> :\n                    <><FlagIcon status=\"passed\" /> 成功匹配 {text}</>\n            } />\n            <Table.Column title=\"备注\" dataIndex=\"overrides\" render={(overrides)=>\n                overrides.map((override, idx)=>(\n                    <Tag key={idx} color=\"red\">{override}</Tag>\n                ))\n            } />\n            <Table.Column title=\"获得分数\" dataIndex=\"gained_score\" />\n        </Table>\n    );\n}\n\nexport function UserSubmissions() {\n    return (\n        <div className=\"slim-container\">\n            <h1>提交历史记录</h1>\n            <SubmissionsTable />\n        </div>\n    );\n}","import {useState} from 'react';\nimport {Skeleton, Alert, Form, Radio, Upload, message, Button, Card} from 'antd';\nimport {FileAddOutlined, FileDoneOutlined, UploadOutlined} from '@ant-design/icons';\n\nimport {Reloader} from './GameLoading';\nimport {useWishData, WISH_VER} from '../wish';\nimport {ExtLink} from '../utils';\nimport {WISH_ROOT, WRITEUP_INSTRUCTION} from '../branding';\n\nimport './Writeup.less';\n\nfunction WriteupForm() {\n    let [error, data, load_data] = useWishData('writeup');\n\n    let [uploading, set_uploading] = useState(false);\n    let [file, set_file] = useState(null);\n    let [publish, set_publish] = useState('Maybe');\n    let [rights, set_rights] = useState('CC-BY-NC');\n\n    if(error)\n        return <Reloader message={error.error_msg} reload={load_data} />;\n    if(data===null)\n        return <Skeleton />;\n\n    function do_submit_writeup() {\n        if(!file) {\n            message.error({content: '请上传 Writeup 文件', key: 'Writeup.Submit', duration: 3});\n            return;\n        }\n\n        let form = new FormData();\n        form.append('file', file);\n        form.append('publish', publish);\n        form.append('rights', rights);\n\n        set_uploading(true);\n\n        // hard to believe that in 2022 it is still not fucking possible to track upload progress with `fetch()`\n        // see https://stackoverflow.com/questions/35711724/upload-progress-indicators-for-fetch\n\n        const xhr = new XMLHttpRequest();\n        xhr.open('PUT', WISH_ROOT+'writeup');\n        xhr.setRequestHeader('X-Wish-Version', WISH_VER);\n        xhr.withCredentials = true;\n        xhr.responseType = 'json';\n\n        xhr.upload.addEventListener('progress', (event)=>{\n            if (event.lengthComputable) {\n                let percentage = (100 * event.loaded / event.total).toFixed(1);\n                message.loading({content: `正在上传…（${percentage}%）`, key: 'Writeup.Submit', duration: 20});\n            }\n        });\n        xhr.addEventListener(\"loadend\", () => {\n            if(xhr.readyState!==4) {\n                message.error({content: `网络错误 state=${xhr.readyState}`, key: 'Writeup.Submit', duration: 3});\n            } else if(xhr.status!==200) {\n                message.error({content: `HTTP 错误 ${xhr.status}`, key: 'Writeup.Submit', duration: 3});\n            } else if(xhr.response.error) {\n                message.error({content: xhr.response.error_msg, key: 'Writeup.Submit', duration: 3});\n            } else {\n                message.success({content: '提交成功', key: 'Writeup.Submit', duration: 2});\n                set_file(null);\n                load_data();\n            }\n            set_uploading(false);\n        });\n\n        xhr.send(form);\n    }\n\n    return (\n        <div>\n            {data.writeup_required ?\n                <Alert showIcon type=\"info\" message={<>\n                    按照比赛规则，你 <b>需要</b> 在截止时间前提交 Writeup\n                </>} /> :\n                <Alert showIcon type=\"info\" message={<>\n                    按照比赛规则，你 <b>不需要</b> 提交 Writeup，但在截止时间前可以自愿提交\n                </>} />\n            }\n            <br />\n            {data.submitted_metadata ?\n                <Alert showIcon type=\"success\" message=\"已经提交了 Writeup\" description={<>\n                    <ul>\n                        {Object.keys(data.submitted_metadata).map((k)=>(\n                            <li key={k}>{k}: {data.submitted_metadata[k]}</li>\n                        ))}\n                    </ul>\n                    <p>在截止时间前，你可以提交新的 Writeup 来覆盖上述内容</p>\n                </>} /> :\n                <Alert showIcon type=\"info\" message=\"尚未提交 Writeup\" />\n            }\n            <br />\n            {WRITEUP_INSTRUCTION}\n            <br />\n            <Card title=\"提交新的 Writeup\" size=\"small\" type=\"inner\" bordered={false}>\n                <Form\n                    onFinish={do_submit_writeup}\n                    colon={false}\n                    labelCol={{span: 4}} labelWrap={true} wrapperCol={{span: 20}}\n                >\n                    <Form.Item label=\"上传文件\">\n                        <Upload.Dragger\n                            fileList={[]}\n                            beforeUpload={(f)=>{\n                                if(f.size/1024/1024<data.max_size_mb)\n                                    set_file(f);\n                                else\n                                    message.error({content: '文件过大，请删除不必要的内容或者压缩图片', key: 'Writeup.File', duration: 3});\n                                return false;\n                            }}\n                            disabled={uploading}\n                        >\n                            <p className=\"ant-upload-drag-icon\">\n                                {file ? <FileDoneOutlined /> : <FileAddOutlined />}\n                            </p>\n                            <p className=\"ant-upload-text\">\n                                {file ? file.name : '选择文件或者拖拽到此处'}\n                            </p>\n                            <p className=\"ant-upload-hint\">\n                                {file ? <>\n                                    {(file.size/1024/1024).toFixed(2)}MB\n                                </> : <>\n                                    文件格式：建议使用 .md, .pdf, .pptx, .7z, .zip 之一<br />\n                                    文件大小：上限 {data.max_size_mb}MB，但一个正常的 Writeup 应当 <b>远小于</b> 此大小\n                                </>}\n                            </p>\n                        </Upload.Dragger>\n                    </Form.Item>\n\n                    <Form.Item label=\"是否公开\" help={\n                        publish==='Always-Yes' ?\n                            <><b>此 Writeup 的内容将在赛后公开</b>，用于学习交流</> :\n                        publish==='Maybe' ?\n                            <>赛后将公开一些高质量或者含有特殊解法的选手 Writeup 用于学习交流，<b>你将允许我们酌情公开或者不公开此 Writeup 的内容</b></> :\n                        publish==='Always-No' ?\n                            <><b>此 Writeup 的内容将不会被公开给其他选手</b>，但命题人依然会出于反作弊目的检查此 Writeup</> :\n                            <>({publish})</>\n                    }>\n                        <Radio.Group buttonStyle=\"solid\" value={publish} onChange={(e)=>set_publish(e.target.value)} disabled={uploading}>\n                            <Radio.Button value=\"Always-Yes\">始终公开</Radio.Button>\n                            <Radio.Button value=\"Maybe\">可以公开（默认）</Radio.Button>\n                            <Radio.Button value=\"Always-No\">不公开</Radio.Button>\n                        </Radio.Group>\n                    </Form.Item>\n\n                    <Form.Item label=\"权利\" help={\n                        rights==='All-Rights-Reserved' ?\n                            <>除非你明确允许，读者 <b>不得转载或改编</b> 此 Writeup 的内容</> :\n                        rights==='CC-BY-NC' ?\n                            <>\n                                此 Writeup 将按照 <ExtLink href=\"https://creativecommons.org/licenses/by-nc/4.0/\">CC BY-NC 4.0</ExtLink>\n                                {' '}协议允许读者 <b>在注明出处的情况下非商业使用</b> 其中的内容\n                            </> :\n                        rights==='CC0' ?\n                            <>\n                                <b>你将放弃对此 Writeup 的所有权利</b>，\n                                按照 <ExtLink href=\"https://creativecommons.org/publicdomain/zero/1.0/\">CC0 1.0</ExtLink>\n                                {' '}协议允许读者任意使用其中的内容\n                            </> :\n                            <>({rights})</>\n                    }>\n                        <Radio.Group buttonStyle=\"solid\" value={rights} onChange={(e)=>set_rights(e.target.value)} disabled={uploading}>\n                            <Radio.Button value=\"All-Rights-Reserved\">保留所有权利</Radio.Button>\n                            <Radio.Button value=\"CC-BY-NC\">允许非商业使用</Radio.Button>\n                            <Radio.Button value=\"CC0\">允许任意使用</Radio.Button>\n                        </Radio.Group>\n                    </Form.Item>\n\n                    <Button block type=\"primary\" size=\"large\" htmlType=\"submit\" disabled={uploading || file===null}>\n                        <UploadOutlined /> 提交\n                    </Button>\n                </Form>\n            </Card>\n        </div>\n    );\n}\n\n\nexport function Writeup() {\n    return (\n        <div className=\"slim-container writeup-container\">\n            <h1>提交 Writeup</h1>\n            <WriteupForm />\n        </div>\n    );\n}","import {useState, useEffect, useCallback} from 'react';\nimport {Skeleton} from 'antd';\n\nimport {TEMPLATE_ROOT} from '../branding';\nimport {Reloader} from '../page/GameLoading';\nimport {TABID} from '../wish';\n\nimport './Template.less';\n\nexport function TemplateStr({name, children}) {\n    return (\n        <div className={`template template-${name}`} dangerouslySetInnerHTML={{__html: children}} />\n    );\n}\n\nexport function TemplateFile({name}) {\n    let [error, set_error] = useState(null);\n    let [html, set_html] = useState(null);\n\n    let load_template = useCallback(()=>{\n        set_html(null);\n        set_error(null);\n\n        fetch(TEMPLATE_ROOT+name+'?tabid=' + TABID, {\n            method: 'GET',\n            credentials: 'include',\n        })\n            .then((res)=>{\n                if(res.status!==200) {\n                    set_error(`HTTP 错误 ${res.status}`);\n                    return null;\n                } else {\n                    return res.text();\n                }\n            })\n            .then((html)=>{\n                set_html(html);\n            })\n            .catch((e)=>{\n                set_error(`网络错误 ${e}`);\n            });\n    }, [name]);\n\n    useEffect(()=>{\n        load_template();\n    }, [load_template]);\n\n    if(error)\n        return <Reloader message={error} reload={load_template} />;\n    if(html===null)\n        return <Skeleton />;\n\n    return (\n        <TemplateStr name={name}>{html}</TemplateStr>\n    );\n}","import {Empty, Skeleton, Card, Tag} from 'antd';\nimport {NotificationOutlined} from '@ant-design/icons';\n\nimport {Reloader} from './GameLoading';\nimport {useWishData} from '../wish';\nimport {TemplateStr} from '../widget/Template';\nimport {TimestampAgo} from '../utils';\n\nimport './Announcements.less';\n\nexport function Announcement({announcement, extra}) {\n    return (\n        <div className=\"announcement\">\n            <Card\n                type=\"inner\" size=\"small\" bordered={false} extra={extra||null}\n                title={<>\n                    <Tag style={{fontSize: '1em', fontWeight: 'bold'}} color=\"blue\">\n                    <NotificationOutlined /> {announcement.title}</Tag>\n                    {' '}发布于 <TimestampAgo ts={announcement.timestamp_s} />\n                </>}\n            >\n                <TemplateStr name=\"announcement\">{announcement.content}</TemplateStr>\n            </Card>\n        </div>\n    );\n}\n\nexport function Announcements() {\n    let [error, data, load_data] = useWishData('announcements');\n\n    if(error)\n        return <Reloader message={error.error_msg} reload={load_data} />;\n    if(data===null)\n        return <Skeleton />;\n\n    return (\n        <div className=\"announcement-list\">\n            {data.list.map((ann)=>(\n                <Announcement key={ann.id} announcement={ann} />\n            ))}\n            {data.list.length===0 &&\n                <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description=\"暂无公告\" />\n            }\n        </div>\n    );\n}","import {useGameInfo} from '../logic/GameInfo';\nimport {Button, message} from 'antd';\nimport {CopyOutlined} from '@ant-design/icons';\n\nimport copy from 'copy-to-clipboard';\n\nimport './TokenWidget.less';\n\nexport function TokenWidget() {\n    let info = useGameInfo();\n\n    function do_copy_token() {\n        if(copy(info.user.token))\n            message.success({content: '已复制', key: 'TokenWidget', duration: 2});\n    }\n\n    return (\n        <div className=\"token-widget\">\n            <Button onClick={do_copy_token} size=\"small\"><CopyOutlined /> 复制个人Token</Button>\n            <span>部分题目需要输入个人 Token 来验证身份，与他人分享 Token 将视为作弊。</span>\n        </div>\n    );\n}","import {useState} from 'react';\nimport {Modal, Skeleton, Table} from 'antd';\n\nimport {useWishData} from '../wish';\nimport {Reloader} from '../page/GameLoading';\nimport {UserGroupTag} from './UserGroupTag';\nimport {format_ts} from '../utils';\n\nimport './TouchedUsers.less';\n\nfunction TouchedUsersModal({ch}) {\n    let [error, data, load_data] = useWishData('get_touched_users/'+ch.key);\n\n    if(error)\n        return <Reloader message={error.error_msg} reload={load_data} />;\n    if(data===null)\n        return <Skeleton />;\n\n    return (\n        <div>\n            <Table dataSource={data.list} size=\"small\">\n                <Table.Column\n                    title=\"用户\"\n                    key=\"user\"\n                    render={(_text, record)=>(\n                    <>\n                        {record.nickname}{' '}\n                        <UserGroupTag>{record.group_disp}</UserGroupTag>\n                    </>\n                    )}\n                    filters={[\n                        {text: '北京大学选手', value: 'pku'},\n                        {text: '其他选手', value: 'other'},\n                    ]}\n                    onFilter={(value, record)=>(\n                        value==='pku'? record.group_disp==='北京大学' :\n                        value==='other'? record.group_disp!=='北京大学' :\n                                true\n                    )}\n                    filterMultiple={false}\n                />\n                {ch.flags.map((flag, idx)=>(\n                    <Table.Column key={idx} title={flag.name || '通过时间'} dataIndex={['flags', idx]} render={(text)=>(\n                        text ? format_ts(text) : ''\n                    )} />\n                ))}\n            </Table>\n        </div>\n    );\n}\n\nexport function TouchedUsersLink({ch, children}) {\n    /* eslint-disable jsx-a11y/anchor-is-valid */\n\n    let [modal_open, set_modal_open] = useState(false);\n\n    return (\n        <>\n            <a onClick={()=>set_modal_open(true)}>{children}</a>\n\n            <Modal\n                visible={modal_open}\n                title={`${ch.title} 的通过情况`}\n                footer={null}\n                destroyOnClose={true}\n                onCancel={()=>set_modal_open(false)}\n                width={600}\n                className=\"touched-users-modal\"\n            >\n                <TouchedUsersModal ch={ch} />\n            </Modal>\n        </>\n    );\n}","import {Fragment, useMemo, useState, useEffect} from 'react';\nimport {useNavigate, useParams} from 'react-router-dom';\nimport {Skeleton, message, Button, Empty, Tag, Alert, Input, Tooltip, Popover, Card} from 'antd';\nimport {\n    PieChartFilled,\n    SyncOutlined,\n    HistoryOutlined,\n    RightCircleOutlined,\n    CaretDownOutlined,\n    QuestionCircleOutlined,\n    FlagOutlined,\n    SolutionOutlined,\n    CodepenOutlined,\n    HomeOutlined,\n    GlobalOutlined,\n    CarryOutOutlined,\n    FileTextOutlined,\n    FireOutlined\n} from '@ant-design/icons';\n\nimport {Reloader} from './GameLoading';\nimport {Announcement} from './Announcements';\nimport {useGameInfo} from '../logic/GameInfo';\nimport {TemplateFile, TemplateStr} from '../widget/Template';\nimport {ChallengeIcon, FlagIcon} from '../widget/ChallengeIcon';\nimport {TokenWidget} from '../widget/TokenWidget';\nimport {TouchedUsersLink} from '../widget/TouchedUsers';\nimport {useWishData, wish} from '../wish';\nimport {TimestampAgo, NotFound, useReloadButton, to_auth} from '../utils';\nimport {WEB_TERMINAL_ADDR, ATTACHMENT_ROOT} from '../branding';\n\nimport './Game.less';\n\nfunction ChallengeAction({action, ch}) {\n    /* eslint-disable react/jsx-no-target-blank */\n    let info = useGameInfo();\n\n    if(action.type==='webpage')\n        return (<>\n            你可以 <a href={action.url.replace(/\\{\\{token}}/g, info.user.token)} target=\"_blank\">访问{action.name}</a>\n        </>);\n    else if(action.type==='webdocker')\n        return (<>\n            你可以 <a href={`https://${action.host}/docker-manager/start?${info.user.token}`} target=\"_blank\">访问{action.name}</a>\n            {' '}\n            <Popover trigger=\"click\" content={<div>\n                <p>本题为每名选手分配一个独立的后端环境，参见 <a href=\"#/info/faq\">FAQ：关于 Web 题目环境</a></p>\n                <p>如果题目出现问题可以手动关闭环境，下次访问时将启动新的环境</p>\n                <Button block danger onClick={()=>{\n                    window.open(`https://${action.host}/docker-manager/stop?${info.user.token}`);\n                }}>关闭环境</Button>\n            </div>}>\n                <Button size=\"small\" style={{marginLeft: '.5em'}}><CodepenOutlined />环境控制</Button>\n            </Popover>\n        </>);\n    else if(action.type==='terminal')\n        return (<>\n            你可以 <a href={WEB_TERMINAL_ADDR(action, info.user.token)} target=\"_blank\">打开网页终端</a> 或者通过命令{' '}\n            <code>nc {action.host} {action.port}</code> 连接到{action.name}\n        </>);\n    else if(action.type==='attachment')\n        return (<>\n            你可以 <a href={`${ATTACHMENT_ROOT}${ch.key}/${action.filename}`} target=\"_blank\">下载{action.name}</a>\n        </>);\n}\n\nfunction FlagInput({do_reload_list, ch}) {\n    let [loading, set_loading] = useState(false);\n\n    function do_submit(flag) {\n        if(!flag)\n            return;\n\n        message.loading({content: '正在提交…', key: 'FlagInput', duration: 10});\n        set_loading(true);\n\n        wish('submit_flag', {\n            challenge_key: ch.key,\n            flag: flag,\n        })\n            .then((res)=>{\n                set_loading(false);\n                if(res.error)\n                    message.error({content: res.error_msg, key: 'FlagInput', duration: 3});\n                else {\n                    message.success({content: '提交成功', key: 'FlagInput', duration: 2});\n                    do_reload_list();\n                }\n            });\n    }\n\n    return (\n        <div>\n            <Input.Search\n                size=\"large\"\n                addonBefore={\n                    ch.flags.length>1 ?\n                        <Tooltip title={`此题有 ${ch.flags.length} 个 Flag，系统会识别你提交的是哪一个`}>\n                            提交任意 Flag：<QuestionCircleOutlined />\n                        </Tooltip> :\n                        '提交 Flag：'\n                }\n                placeholder=\"flag{...}\"\n                enterButton={<><FlagOutlined /> 提交</>}\n                onSearch={do_submit}\n                loading={loading}\n            />\n        </div>\n    );\n}\n\nfunction ChallengeBody({ch}) {\n    let [error, data, load_data] = useWishData('challenge/'+ch.key);\n\n    if(error)\n        return <Reloader message={error.error_msg} reload={load_data} />;\n    if(data===null)\n        return <Skeleton />;\n\n    return (<>\n        <TemplateStr name=\"challenge-desc\">{data.desc}</TemplateStr>\n        <br />\n        {data.actions.map((action, idx)=>(\n            <p key={idx} className=\"challenge-action\">\n                <RightCircleOutlined />{' '}\n                <ChallengeAction ch={ch} action={action} />\n            </p>\n        ))}\n    </>);\n}\n\nfunction ScoreDeduction({base, cur}) {\n    if(base===cur)\n        return null;\n    else {\n        let ratio = (1-cur/base)*100;\n        return (\n            <span className=\"item-discount\" title={'基础分值：'+base}>(-{ratio.toFixed(0)}%)</span>\n        );\n    }\n}\n\nfunction Challenge({ch, do_reload_list}) {\n    return (\n        <div className=\"challenge-body\">\n            <h1>{ch.title}</h1>\n            <p className=\"challenge-stat\">\n                <Tag color=\"default\">\n                    基础分值 {ch.tot_base_score}\n                </Tag>\n                <Tag color=\"default\">\n                    <TouchedUsersLink ch={ch}>\n                        <RightCircleOutlined />{' '}\n                        共 {ch.passed_users_count} 人通过\n                        {ch.touched_users_count>ch.passed_users_count && <>\n                            （{ch.touched_users_count} 人部分通过）\n                        </>}\n                    </TouchedUsersLink>\n                </Tag>\n                {!!ch.metadata.author &&\n                    <Tag color=\"default\">\n                        命题人：{ch.metadata.author}\n                    </Tag>\n                }\n                {!!ch.metadata.first_blood_award_eligible &&\n                    <Tag color=\"default\">\n                        <a href=\"#/board/first_pku\">\n                            <b><FireOutlined /> 解题先锋奖</b>\n                        </a>\n                    </Tag>\n                }\n            </p>\n            <br />\n            <ChallengeBody ch={ch} />\n            {ch.status==='passed' ?\n                <Alert type=\"success\" showIcon message=\"你已经通过此题\" /> :\n                <FlagInput do_reload_list={do_reload_list} ch={ch} />\n            }\n            <br />\n            <TokenWidget />\n        </div>\n    );\n}\n\nfunction PortalUserInfo({info}) {\n    let nav = useNavigate();\n\n    return (\n        <div className=\"portal-user-info\" onClick={()=>nav('/board/'+info.active_board_key)}>\n            <div className=\"portal-user-info-status\">\n                {info.status_line}\n            </div>\n            {info.tot_score_by_cat!==null &&\n                <div className=\"portal-user-info-cat\">\n                    <PieChartFilled />{' '}\n                    {info.tot_score_by_cat.map((cat, idx)=>(\n                        <Fragment key={cat}>\n                            {idx!==0 ? ' + ' : null}\n                            {cat[0]} {cat[1]}\n                        </Fragment>\n                    ))}\n                </div>\n            }\n        </div>\n    );\n}\n\nfunction PortalChallengeList({list, active_key}) {\n    let nav = useNavigate();\n\n    return (\n        <div className=\"portal-chall-list\">\n            {list===null ?\n                <Alert showIcon type=\"info\" message=\"现在不允许查看题目\" /> :\n                <>\n                    <div className=\"portal-chall-row portal-chall-header\">\n                        <div className=\"portal-chall-col-title\">\n                            题目名称\n                        </div>\n                        <div className=\"portal-chall-col-score\">\n                            分值\n                        </div>\n                    </div>\n                    {list.map((ch)=>(\n                        <Fragment key={ch.key}>\n                            <div\n                                className={`portal-chall-row${active_key===ch.key ? ' portal-chall-row-active' : ''}`}\n                                onClick={()=>nav('/game/'+ch.key)}\n                            >\n                                <div className=\"portal-chall-col-title\">\n                                    <span className=\"portal-chall-category-badge\">\n                                        <Tag color={ch.category_color}>{ch.category}</Tag>\n                                    </span>\n                                    <ChallengeIcon status={ch.status} /> {ch.title}\n                                    {ch.flags.length>1 && <span className=\"portal-chall-caret\"><CaretDownOutlined /></span>}\n                                </div>\n                                <div className=\"portal-chall-col-score\">\n                                    {ch.tot_cur_score}<span className=\"label-for-score\">分</span>\n                                    {' '}<ScoreDeduction base={ch.tot_base_score} cur={ch.tot_cur_score} />\n                                </div>\n                            </div>\n                            {active_key===ch.key && ch.flags.length>1 &&\n                                ch.flags.map((f, idx)=>(\n                                    <div key={idx} className=\"portal-chall-row portal-chall-row-active portal-chall-row-flag\">\n                                        <div className=\"portal-chall-col-title\">\n                                            <FlagIcon status={f.status} /> {f.name}\n                                        </div>\n                                        <div className=\"portal-chall-col-score\">\n                                            {f.cur_score}<span className=\"label-for-score\">分</span>\n                                            {' '}<ScoreDeduction base={f.base_score} cur={f.cur_score} />\n                                        </div>\n                                    </div>\n                                ))\n                            }\n                        </Fragment>\n                    ))}\n                    {list.length===0 &&\n                        <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description=\"暂无题目\" />\n                    }\n                </>\n            }\n        </div>\n    );\n}\n\nfunction Portal() {\n    let [error, data, load_data] = useWishData('game');\n    let nav = useNavigate();\n    let [last_reloaded, mark_reload, reload_btn] = useReloadButton(3);\n    let params = useParams();\n\n    let active_challenge_key = params.challenge===undefined ? null : params.challenge;\n\n    let active_challenge = useMemo(()=>{\n        if(data!==null && data.challenge_list!==null)\n            for(let ch of data.challenge_list)\n                if(ch.key===active_challenge_key)\n                    return ch;\n        return null;\n    }, [data, active_challenge_key]);\n\n    useEffect(()=>{\n        if(window._anticheat_report) {\n            window._anticheat_report();\n        }\n    }, []);\n\n    if(error) {\n        if(error.error==='SHOULD_AGREE_TERMS') {\n            message.info({content: error.error_msg, key: 'Portal.Error', duration: 2});\n            nav('/user/terms');\n        }\n        if(error.error==='SHOULD_UPDATE_PROFILE') {\n            message.info({content: error.error_msg, key: 'Portal.Error', duration: 2});\n            nav('/user/profile');\n        }\n\n        return (\n            <div className=\"slim-container\">\n                <Reloader message={error.error_msg} reload={()=>{\n                    mark_reload();\n                    load_data();\n                }} />\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"portal-container\">\n            <div className=\"portal-sidebar\">\n                <div className=\"portal-headline\">\n                    <div>\n                        <HistoryOutlined /> {last_reloaded!==0 && <>\n                            <TimestampAgo ts={last_reloaded} />更新\n                        </>}\n                    </div>\n                    <div>\n                        <Button type=\"link\" ref={reload_btn} onClick={()=>{\n                            message.success({content: '已刷新题目数据', key: 'Portal.ManualLoadData', duration: 2});\n                            mark_reload();\n                            load_data();\n                        }}>\n                            <SyncOutlined /> 刷新题目\n                        </Button>\n                    </div>\n                </div>\n\n                {data===null ?\n                    <Skeleton /> :\n                    <>\n                        <div className=\"portal-primary-btn\">\n                            {!!data.show_writeup ?\n                                <Button block size=\"large\" onClick={()=>nav('/writeup')} type=\"primary\">\n                                    <SolutionOutlined /> 提交 Writeup\n                                </Button> :\n                                <Button block size=\"large\" onClick={()=>nav('/info/faq')}>\n                                    <FileTextOutlined /> 选手常见问题\n                                </Button>\n                            }\n                        </div>\n                        <PortalUserInfo info={data.user_info} />\n                        <PortalChallengeList list={data.challenge_list} active_key={active_challenge_key} />\n                    </>\n                }\n            </div>\n            <div className=\"portal-main\">\n                <div className=\"portal-headline\">\n                    {data!==null &&\n                        <div>\n                            <CarryOutOutlined /> {data.trigger.current_name.replace(/;/, '，')}\n                            {!!data.trigger.next_name && <>\n                                （<TimestampAgo ts={data.trigger.next_timestamp_s} delta={5} />：{data.trigger.next_name.replace(/;/, '，')}）\n                            </>}\n                        </div>\n                    }\n                    <div>\n                        <Button type=\"link\" onClick={()=>{\n                            window.location.href = '#/info/triggers';\n                        }}>\n                            <RightCircleOutlined /> 查看赛程安排\n                        </Button>\n                    </div>\n                </div>\n                {data!==null && data.last_announcement!==null &&\n                    <Announcement\n                        announcement={data.last_announcement}\n                        extra={\n                            <a href=\"#/info/announcements\">\n                                <RightCircleOutlined /> 查看所有公告\n                            </a>\n                        }\n                    />\n                }\n                {active_challenge!==null ?\n                    <Challenge ch={active_challenge} do_reload_list={load_data} />:\n                (active_challenge_key!==null && data!==null) ?\n                    <NotFound /> :\n                    <TemplateFile name=\"game\" />\n                }\n            </div>\n        </div>\n    );\n}\n\nexport function Game() {\n    let info = useGameInfo();\n\n    if(!info.feature.game)\n        return (\n            <div className=\"slim-container\">\n                <TemplateFile name=\"game\" />\n                <br />\n                <div className=\"landing-login-form\">\n                    <Card type=\"inner\" size=\"small\" bordered={false}>\n                        <b>报名参赛：</b>\n                        <Button type=\"primary\" onClick={()=>to_auth('pku/redirect')}><HomeOutlined /> 北京大学登录</Button>\n                        {' '}\n                        <Button onClick={()=>window.location.href='#/login/other'}><GlobalOutlined /> 校外选手</Button>\n                    </Card>\n                </div>\n            </div>\n        );\n    else\n        return (\n            <Portal />\n        );\n}","import {Skeleton, Timeline, Empty} from 'antd';\nimport {ClockCircleOutlined} from '@ant-design/icons';\n\nimport {useWishData} from '../wish';\nimport {Reloader} from './GameLoading';\nimport {format_ts} from '../utils';\n\nimport './Trigger.less';\n\nfunction WithStatus({status, children}) {\n    return (\n        <span className={`trigger-status-${status}`}>{children}</span>\n    );\n}\n\nfunction Splitter({children}) {\n    let splitted = children.split(';');\n\n    return (\n        <div className=\"trigger-fragments\">\n            {splitted.map((frag, idx)=>(\n                <p key={idx}>{frag}</p>\n            ))}\n        </div>\n    );\n}\n\nexport function Triggers() {\n    let [error, data, load_data] = useWishData('triggers');\n\n    if(error)\n        return <Reloader message={error.error_msg} reload={load_data} />;\n    if(data===null)\n        return <Skeleton />;\n\n    return (\n        <div>\n            <br />\n            <Timeline mode=\"left\">\n                {data.list.map((trigger)=>(\n                    <Timeline.Item\n                        key={trigger.timestamp_s}\n                        label={<WithStatus status={trigger.status}>\n                            {trigger.timestamp_s===0 ? '--' : format_ts(trigger.timestamp_s)}\n                        </WithStatus>}\n                        color={{'pst': 'gray', 'prs': 'blue', 'ftr': 'black'}[trigger.status]}\n                        dot={{'pst': null, 'prs': <ClockCircleOutlined />, 'ftr': null}[trigger.status]}\n                    >\n                        <WithStatus status={trigger.status}><Splitter>{trigger.name}</Splitter></WithStatus>\n                    </Timeline.Item>\n                ))}\n            </Timeline>\n            {data.list.length===0 &&\n                <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description=\"暂无赛程\" />\n            }\n        </div>\n    );\n}","import {useContext, useState, useRef} from 'react';\nimport {Card, Form, Input, Alert, Radio, Button, message} from 'antd';\nimport {CheckCircleOutlined} from '@ant-design/icons';\nimport {useNavigate} from 'react-router-dom';\n\nimport {GameInfoCtx} from '../logic/GameInfo';\nimport {UserGroupTag} from '../widget/UserGroupTag';\nimport {UserBadges} from '../widget/UserBadges';\nimport {wish} from '../wish';\n\nimport './UserProfile.less';\n\nfunction UserProfileForm() {\n    let {info, reload_info} = useContext(GameInfoCtx);\n    let [changed, set_changed] = useState(false);\n    let submit_btn = useRef(null);\n    let nav = useNavigate();\n\n    if(!info.user)\n        return (\n            <Alert\n                type=\"error\" showIcon\n                message=\"未登录\" description=\"请登录后修改个人资料\"\n            />\n        );\n\n    let form_style = {\n        colon: false,\n        initialValues: info.user.profile,\n        labelCol: {span: 6},\n        labelWrap: true,\n        wrapperCol: {span: 13},\n        onValuesChange: ()=>{set_changed(true);},\n    };\n    let card_style = {\n        size: 'small',\n        type: 'inner',\n        bordered: false,\n    };\n    let input_style = {\n        onPressEnter: ()=>{\n            if(submit_btn.current)\n                submit_btn.current.click();\n        }\n    };\n\n    return (\n        <Form.Provider\n            onFormFinish={(name, {forms})=>{\n                if(name!=='submit') // submit events in other forms are redirected to `submit_btn.click()` in `onValuesChange`\n                    return;\n                if(!changed)\n                    return;\n\n                let all_values = {};\n                Object.values(forms)\n                    .forEach((f)=>{\n                        Object.assign(all_values, f.getFieldsValue());\n                    });\n                message.loading({content: '正在保存…', key: 'UserProfile', duration: 10});\n\n                wish('update_profile', {\n                    'profile': all_values,\n                })\n                    .then((res)=>{\n                        if(res.error) {\n                            message.error({content: res.error_msg, key: 'UserProfile', duration: 3});\n                            if(res.error==='SHOULD_AGREE_TERMS')\n                                nav('/user/terms');\n                        }\n                        else {\n                            message.success({content: '保存成功', key: 'UserProfile', duration: 2});\n                            reload_info();\n                            nav('/');\n                        }\n                    })\n            }}\n        >\n            <Card title=\"公开资料\" {...card_style}>\n                <Form name=\"public\" {...form_style}>\n                    {info.user.profile.nickname!==undefined &&\n                        <Form.Item name=\"nickname\" label=\"昵称\" extra=\"如包含不适宜内容可能会被强制修改、封禁账号或追究责任\">\n                            <Input maxLength={20} showCount placeholder=\"（将显示在排行榜上）\" {...input_style} />\n                        </Form.Item>\n                    }\n                    {info.user.profile.gender!==undefined &&\n                        <Form.Item name=\"gender\" label=\"性别\" extra=\"用于确认女生特别奖资格，请如实选择，选择后无法修改\">\n                            <Radio.Group buttonStyle=\"solid\">\n                                <Radio.Button value=\"male\">男</Radio.Button>\n                                <Radio.Button value=\"female\">女</Radio.Button>\n                                <Radio.Button value=\"other\">其他</Radio.Button>\n                            </Radio.Group>\n                        </Form.Item>\n                    }\n                    <Form.Item label=\"用户组\">\n                        <UserGroupTag>{info.user.group_disp}</UserGroupTag>\n                        <UserBadges badges={info.user.badges} />\n                    </Form.Item>\n                </Form>\n                {info.user.group==='banned' && <>\n                    <br />\n                    <Alert type=\"error\" showIcon message=\"由于违反规则，你的参赛资格已被取消。如有疑问请联系工作人员。\" />\n                </>}\n                {info.user.group==='other' && <>\n                    <br />\n                    <Alert type=\"info\" showIcon message=\"你的身份不是北京大学在校学生，将不参与评奖。如有疑问请联系工作人员。\" />\n                </>}\n            </Card>\n            <br />\n            <Card title=\"联系方式\" {...card_style}>\n                <Form name=\"contact\" {...form_style}>\n                    {info.user.profile.tel!==undefined &&\n                        <Form.Item name=\"tel\" label=\"电话号码\">\n                            <Input maxLength={20} {...input_style} />\n                        </Form.Item>\n                    }\n                    {info.user.profile.email!==undefined &&\n                        <Form.Item name=\"email\" label=\"邮箱\">\n                            <Input {...input_style} />\n                        </Form.Item>\n                    }\n                    {info.user.profile.qq!==undefined &&\n                        <Form.Item name=\"qq\" label=\"QQ号\">\n                            <Input maxLength={50} {...input_style} />\n                        </Form.Item>\n                    }\n                </Form>\n                {info.user.group==='pku' && <>\n                    <br />\n                    <Alert type=\"info\" showIcon message=\"请正确填写以便赛后联系和颁奖，同时请加入选手 QQ 群 691076890\" />\n                </>}\n            </Card>\n            <br />\n            <Card title=\"其他信息\" {...card_style}>\n                <Form name=\"other\" {...form_style}>\n                    {info.user.profile.comment!==undefined &&\n                        <Form.Item name=\"comment\" label=\"了解比赛的渠道\">\n                            <Input maxLength={100} placeholder=\"（可不填）\" {...input_style} />\n                        </Form.Item>\n                    }\n                </Form>\n            </Card>\n            <br />\n            <Form name=\"submit\">\n                <Button type=\"primary\" size=\"large\" block htmlType=\"submit\" disabled={!changed} ref={submit_btn}>\n                    <CheckCircleOutlined /> 保存\n                </Button>\n            </Form>\n        </Form.Provider>\n    );\n}\n\nexport function UserProfile() {\n    return (\n        <div className=\"slim-container user-profile-container\">\n            <h1>个人资料</h1>\n            <UserProfileForm />\n        </div>\n    );\n}","import {useContext} from 'react';\nimport {Button, message} from 'antd';\nimport {useNavigate} from 'react-router-dom';\nimport {CheckCircleOutlined} from '@ant-design/icons';\n\nimport {GameInfoCtx} from '../logic/GameInfo';\nimport {TemplateFile} from '../widget/Template';\nimport {wish} from '../wish';\n\nexport function Terms() {\n    let {info, reload_info} = useContext(GameInfoCtx);\n    let nav = useNavigate();\n\n    function agree_term() {\n        message.loading({content: '正在保存…', key: 'Terms', duration: 10});\n        if(window._anticheat_report)\n            window._anticheat_report();\n\n        wish('agree_term', {})\n            .then((res)=>{\n                if(res.error)\n                    message.error({content: res.error_msg, key: 'Terms', duration: 3});\n                else {\n                    message.success({content: '保存成功', key: 'Terms', duration: 2});\n                    reload_info();\n                    nav('/');\n                }\n            });\n    }\n\n    return (\n        <div className=\"slim-container\">\n            <h1>参赛须知</h1>\n            <TemplateFile name=\"terms\" />\n            <br />\n            {info.user!==null && (\n                info.user.terms_agreed ?\n                    <Button type=\"primary\" size=\"large\" block disabled>\n                        <CheckCircleOutlined /> 已同意参赛须知\n                    </Button> :\n                    <Button type=\"primary\" size=\"large\" block onClick={agree_term}>\n                        <CheckCircleOutlined /> 我理解并同意参赛须知\n                    </Button>\n            )}\n        </div>\n    );\n}","import {Alert, Button} from 'antd';\nimport {GithubOutlined, WindowsOutlined, HomeOutlined} from '@ant-design/icons';\n\nimport {to_auth} from '../utils';\n\nimport './LoginOther.less';\n\nexport function LoginOther() {\n    return (\n        <div className=\"slim-container\">\n            <Alert showIcon message={<b>校外选手注意事项</b>} description={<>\n                <p>\n                    我们允许校外选手通过 OAuth 登录一同参与比赛。\n                    校外选手将不参与评奖，但可以正常查看题目并提交答案。将按与校内选手相同的标准计分，显示在总排行榜上。\n                </p>\n                <p>\n                    校外选手答题将不影响动态分值机制，即题目分数只受校内解出人数影响。\n                </p>\n                <p>\n                    校外选手同样需要遵守 <a href=\"#/user/terms\">诚信比赛须知</a>，在比赛结束前不得公布解法或提示，不得代打或与他人合作。\n                </p>\n                <p>\n                    在解题时请遵守法律法规，仅可攻击题目指定的主机。\n                    如果选手在解题时非法访问或破坏了其他无关系统，将承担相应的法律责任。\n                </p>\n            </>} />\n\n            <br />\n\n            <div className=\"login-instruction\">\n                <p><b>选择登录方式</b></p>\n                <p>\n                    <Button size=\"large\" onClick={()=>to_auth('github/login')}>\n                        <GithubOutlined /> GitHub\n                    </Button>\n                    &emsp;\n                    <Button size=\"large\" onClick={()=>to_auth('microsoft/login')}>\n                        <WindowsOutlined /> Microsoft\n                    </Button>\n                </p>\n\n                <br />\n                <hr />\n                <br />\n\n                <p className=\"login-pku-warning\"><b>北京大学校内选手注意</b></p>\n                <p>\n                    本竞赛不允许选手注册多个账号，校内选手务必全程通过北京大学统一身份认证（IAAA）系统登录，否则视为放弃评奖资格。\n                </p>\n                <p>\n                    <Button size=\"large\" onClick={()=>to_auth('pku/redirect')}>\n                        <HomeOutlined /> 北京大学登录\n                    </Button>\n                </p>\n            </div>\n        </div>\n    );\n}","import {useNavigate, useLocation} from 'react-router-dom';\nimport {Menu} from 'antd';\nimport {\n    UnorderedListOutlined, CrownOutlined, NotificationOutlined, UserOutlined, LoginOutlined, CaretDownOutlined,\n    EditOutlined, FileProtectOutlined, DisconnectOutlined, HomeOutlined, GlobalOutlined, HistoryOutlined\n} from '@ant-design/icons';\n\nimport {useGameInfo} from '../logic/GameInfo';\nimport {GAME_TITLE, GAME_LOGO} from '../branding';\nimport {Cap, to_auth} from '../utils';\n\nimport \"./Header.less\";\n\nexport function Header() {\n    let game_info = useGameInfo();\n    let loc = useLocation();\n    let nav = useNavigate();\n\n    let cur_key = (\n        loc.pathname.startsWith('/user/') ?\n            loc.pathname :\n            '/' + loc.pathname.substring(1).split('/')[0]\n    );\n\n    return (\n        <div className=\"header-container\">\n            <div className=\"header\">\n                <div className=\"header-logo\">\n                    <span className=\"clickable\" onClick={()=>nav('/')}>\n                        {cur_key===\"/license\" ?\n                            <img src=\"you-sticker.png\" alt=\"\" title=\"ヒトリダケナンテエラベイナイヨ\" className=\"game-logo\" style={{backgroundColor: \"#bdb\"}} /> :\n                            GAME_LOGO\n                        }\n                        {GAME_TITLE}\n                    </span>\n                </div>\n                <div className=\"header-nav\">\n                    <Menu\n                        mode=\"horizontal\" theme=\"dark\"\n                        selectedKeys={[cur_key]} onSelect={(e)=>{if(e.key.charAt(0)!=='_') nav(e.key)}}\n                    >\n                        {!!game_info.feature.game &&\n                            <Menu.Item key=\"/game\"><UnorderedListOutlined /> 比赛主页</Menu.Item>\n                        }\n                        <Menu.Item key=\"/board\"><CrownOutlined /> 排行榜</Menu.Item>\n                        <Menu.Item key=\"/info\"><NotificationOutlined /> 信息</Menu.Item>\n                        {game_info.user ?\n                            <Menu.SubMenu\n                                key=\"_/user\" popupOffset={[-6, 2]}\n                                title={<>\n                                    <span><UserOutlined /></span> <Cap text={game_info.user.profile.nickname||'账户'} width={110} />\n                                    <span className=\"header-nav-caret\"><CaretDownOutlined /></span>\n                                </>}\n                                popupClassName=\"header-nav-popup\"\n                            >\n                                <Menu.Item key=\"/user/profile\"><EditOutlined /> 个人资料</Menu.Item>\n                                <Menu.Item key=\"/user/submissions\"><HistoryOutlined /> 提交历史记录</Menu.Item>\n                                <Menu.Item key=\"/user/terms\"><FileProtectOutlined /> 参赛须知</Menu.Item>\n                                <Menu.Item key=\"_/user/logout\" danger onClick={()=>to_auth('logout')}><DisconnectOutlined /> 注销</Menu.Item>\n                            </Menu.SubMenu> :\n                            <Menu.SubMenu\n                                key=\"_/login\" popupOffset={[-6, 2]}\n                                title={<>\n                                    <LoginOutlined /> 参赛\n                                    <span className=\"header-nav-caret\"><CaretDownOutlined /></span>\n                                </>}\n                                className=\"header-nav-login\" popupClassName=\"header-nav-popup\"\n                            >\n                                <Menu.Item key=\"_/login/pku\" onClick={()=>to_auth('pku/redirect')}><HomeOutlined /> 北京大学登录</Menu.Item>\n                                <Menu.Item key=\"/login/other\"><GlobalOutlined /> 校外选手</Menu.Item>\n                            </Menu.SubMenu>\n                        }\n                    </Menu>\n                </div>\n            </div>\n        </div>\n    );\n}","import {GithubOutlined} from '@ant-design/icons';\n\nimport './Footer.less';\n\nexport function Footer() {\n    return (\n        <div className=\"footer\">\n            <p>\n                Project <b>Guiding Star</b> by PKUGGG Team\n                {process.env.REACT_APP_BUILD_INFO ? ' ('+process.env.REACT_APP_BUILD_INFO+')' : null}\n                <br />\n                <a href=\"#/license\"><GithubOutlined /> 开放源代码</a>\n            </p>\n        </div>\n    );\n}","import {useEffect} from 'react';\nimport {Route, Routes, useNavigate, Navigate, useParams} from 'react-router-dom';\nimport {Menu, Alert} from 'antd';\nimport {NotificationOutlined, FileTextOutlined, CarryOutOutlined, FundOutlined, AimOutlined} from '@ant-design/icons';\n\nimport {License} from './page/License';\nimport {Board} from './page/Board';\nimport {UserSubmissions} from './page/UserSubmissions';\nimport {Writeup} from './page/Writeup';\nimport {Game} from './page/Game';\nimport {Announcements} from './page/Announcements';\nimport {Triggers} from './page/Triggers';\nimport {UserProfile} from './page/UserProfile';\nimport {Terms} from './page/Terms';\nimport {LoginOther} from './page/LoginOther';\nimport {Header} from './widget/Header';\nimport {Footer} from './widget/Footer';\nimport {TemplateFile} from './widget/Template';\nimport {useGameInfo} from './logic/GameInfo';\nimport {NotFound} from './utils'\nimport {SYBIL_ROOT} from './branding';\nimport {TABID} from './wish';\n\nimport './App.less';\n\nfunction InfoRouter() {\n    let {page} = useParams();\n    let nav = useNavigate();\n    let info = useGameInfo();\n\n    return (\n        <div className=\"slim-container\">\n            <Menu className=\"router-menu\" selectedKeys={[page]} onSelect={(e)=>{nav(`/info/${e.key}`);}} mode=\"horizontal\">\n                <Menu.Item key=\"announcements\"><NotificationOutlined /> 比赛公告</Menu.Item>\n                <Menu.Item key=\"triggers\"><CarryOutOutlined /> 赛程安排</Menu.Item>\n                {info.feature.templates.map(([name, title])=>(\n                    <Menu.Item key={name}><FileTextOutlined /> {title}</Menu.Item>\n                ))}\n            </Menu>\n            <br />\n            {\n                page==='announcements' ?\n                    <Announcements /> :\n                page==='triggers' ?\n                    <Triggers /> :\n                <TemplateFile name={page} />\n            }\n        </div>\n    );\n}\n\nfunction BoardRouter() {\n    let {name} = useParams();\n    let nav = useNavigate();\n\n    return (\n        <div>\n            <Menu className=\"router-menu\" selectedKeys={[name]} onSelect={(e)=>{nav(`/board/${e.key}`);}} mode=\"horizontal\">\n                <Menu.Item key=\"score_pku\"><FundOutlined /> 北京大学排名</Menu.Item>\n                <Menu.Item key=\"first_pku\"><AimOutlined /> 北京大学一血榜</Menu.Item>\n                <Menu.Item key=\"score_all\"><FundOutlined /> 总排名</Menu.Item>\n                <Menu.Item key=\"first_all\"><AimOutlined /> 总一血榜</Menu.Item>\n            </Menu>\n            <Board key={name} name={name} />\n        </div>\n    );\n}\n\nfunction PageStateReporter() {\n    let info = useGameInfo();\n\n    useEffect(()=>{\n        function on_focus() {\n            fetch(`${SYBIL_ROOT}event?name=focus&tabid=${TABID}`, {\n                method: 'POST',\n                credentials: 'include',\n            });\n        }\n        function on_blur() {\n            fetch(`${SYBIL_ROOT}event?name=blur&tabid=${TABID}`, {\n                method: 'POST',\n                credentials: 'include',\n            });\n        }\n\n        if(info.user && info.user.terms_agreed) {\n            window.addEventListener('focus', on_focus);\n            window.addEventListener('blur', on_blur);\n            return ()=>{\n                window.removeEventListener('focus', on_focus);\n                window.removeEventListener('blur', on_blur);\n            };\n        }\n    }, [info.user]);\n\n    return null;\n}\n\nexport function App() {\n    return (\n        <div>\n            <PageStateReporter />\n            <Header />\n            <div className=\"main-container\">\n                <Alert.ErrorBoundary>\n                    <Routes>\n                        <Route exact path=\"/\" element={<Navigate to=\"/game\" replace />} />\n                        <Route exact path=\"/game\" element={<Game />} />\n                        <Route exact path=\"/game/:challenge\" element={<Game />} />\n\n                        <Route exact path=\"/board\" element={<Navigate to=\"/board/score_pku\" replace />} />\n                        <Route exact path=\"/board/:name\" element={<BoardRouter />} />\n\n                        <Route exact path=\"/info\" element={<Navigate to=\"/info/announcements\" replace />} />\n                        <Route exact path=\"/info/:page\" element={<InfoRouter />} />\n\n                        <Route exact path=\"/user/profile\" element={<UserProfile />} />\n                        <Route exact path=\"/user/submissions\" element={<UserSubmissions />} />\n                        <Route exact path=\"/user/terms\" element={<Terms />} />\n\n                        <Route exact path=\"/login/other\" element={<LoginOther />} />\n\n                        <Route exact path=\"/writeup\" element={<Writeup />} />\n                        <Route exact path=\"/license\" element={<License />} />\n\n                        <Route path=\"*\" element={<NotFound />} />\n                    </Routes>\n                </Alert.ErrorBoundary>\n            </div>\n            <Footer />\n        </div>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import ReactDOMServer from 'react-dom/server';\nimport {ConfigProvider, Alert} from 'antd';\nimport {HashRouter} from 'react-router-dom';\n\nimport {GameInfoProvider} from './logic/GameInfo';\nimport {App} from './App';\n\nimport zhCN from 'antd/es/locale/zh_CN';\n\nimport './index.less';\n\nlet component = (\n    <ConfigProvider autoInsertSpaceInButton={false} locale={zhCN}>\n        <HashRouter>\n            <Alert.ErrorBoundary>\n                <GameInfoProvider>\n                    <App />\n                </GameInfoProvider>\n            </Alert.ErrorBoundary>\n        </HashRouter>\n    </ConfigProvider>\n);\n\n//console.log(ReactDOMServer.renderToString(component));\nReactDOM.render(component, document.getElementById('root'));\n","import {ExtLink} from './utils';\n\nexport const GAME_TITLE = document.title;\nexport const GAME_LOGO = <img src=\"logo-bw.png\" alt=\"\" className=\"game-logo\" />;\n\nconst SVC_ROOT = '/service/'\nexport const WISH_ROOT = SVC_ROOT+'wish/';\nexport const AUTH_ROOT = SVC_ROOT+'auth/';\nexport const TEMPLATE_ROOT = SVC_ROOT+'template/';\nexport const WS_ROOT = SVC_ROOT+'ws/';\nexport const SYBIL_ROOT = SVC_ROOT+'anticheat/';\nexport const ATTACHMENT_ROOT = SVC_ROOT+'attachment/';\n\nexport function WEB_TERMINAL_ADDR(action, token) {\n    return `https://${action.host}/?token=${token}`;\n}\n\nexport const CONTEST_LICENSE = (<>\n    <p>\n        比赛完全结束后，资料存档将 <ExtLink href=\"https://github.com/PKU-GeekGame/geekgame-2nd\">公开到 GitHub</ExtLink>。\n        本比赛的所有题面采用 <ExtLink href=\"https://creativecommons.org/licenses/by-nc/4.0/\">CC BY-NC 4.0</ExtLink> 协议许可，\n        所有题目源码采用 <ExtLink href=\"https://opensource.org/licenses/MIT\">MIT</ExtLink> 协议许可，\n        命题人和选手 Writeup 按照作者指定的方式进行许可。\n    </p>\n    <p>\n        请注意上述许可不包括比赛相关的其他资料（包括但不限于比赛公告、参赛须知、比赛介绍和其他宣传资料）。这些资料不允许未授权使用。\n    </p>\n</>);\n\nexport const WRITEUP_INSTRUCTION = (<>\n    <p>\n        请在 Writeup 中描述自己是如何解出每道题目的，其最低要求是让命题人相信你确实在比赛期间独立完成了题目。\n        建议使用 Markdown 格式，但我们也接受 .pdf 或 .pptx 格式。\n    </p>\n    <p>\n        如果有附加文件（如解题使用的脚本），请将 Writeup 和所有附加文件打包成 .7z 或 .zip 格式。\n        我们会将部分优秀选手 Writeup 公开到 GitHub，因此请注意控制文件大小，避免将题目附件、编译结果、临时文件、第三方程序打包在内。\n    </p>\n    <p>\n        在提交截止时间前请勿公开 Writeup 或交流思路。如果他人的 Writeup 与你雷同，你也会受到影响。\n    </p>\n</>);"],"sourceRoot":""}